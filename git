[1mdiff --git a/Projeto_Metodos.py b/Projeto_Metodos.py[m
[1mindex 9ecd427..a35752e 100644[m
[1m--- a/Projeto_Metodos.py[m
[1m+++ b/Projeto_Metodos.py[m
[36m@@ -4,94 +4,85 @@[m [mimport sympy[m
 [m
 [m
 [m
[31m-[m
[31m-def euler(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y,lista_t):[m
[32m+[m[32mdef euler(expressao,valor_h,valor_passos,lista_y_euler,lista_t_euler,euler):[m
 	[m
[31m-	print ('Metodo de euler')[m
[31m-	print ('y(',valor_t,') =',valor_y)[m
[31m-	print ('h =',valor_h)[m
[31m-	lista_y.append(valor_y)[m
[31m-	lista_t.append(valor_t)[m
[32m+[m	[32mvalor_y=lista_y_euler[0][m
[32m+[m	[32mvalor_t=lista_t_euler[0][m
[32m+[m	[32mif(euler==1):print (valor_t,  valor_y)[m
 [m
[31m-	for next in range(valor_passos+1):[m
[31m-		Fn=S(expressao).subs({'t':valor_t,'y':valor_y})[m
[32m+[m	[32mfor i in range(valor_passos):[m
[32m+[m		[32mFn=S(expressao).subs({'t':lista_t_euler[i],'y':lista_y_euler[i]})[m
 		valor_y=valor_y+valor_h*Fn[m
 		valor_t=valor_t+valor_h[m
 [m
[31m-		lista_y.append(valor_y)[m
[31m-		lista_t.append(valor_t)	[m
[31m-		print ("%d  %.10f" %(next , valor_y))[m
[32m+[m		[32mlista_y_euler.append(valor_y)[m
[32m+[m		[32mlista_t_euler.append(valor_t)[m[41m	[m
[32m+[m		[32mif(euler==1):print ("%d  %.10f" %(i+1 , valor_y))[m
 [m
[31m-	[m
[31m-	plt.plot(lista_t, lista_y)[m
[31m-	plt.show()[m
 	return [m
 [m
[31m-def euler_n_mais_1(valor_y2,valor_t2,valor_h2):[m
[32m+[m[32mdef euler_n_mais_1(expressao,valor_y2,valor_t2,valor_h2):[m
 [m
 	Fn2=S(expressao).subs({'t':valor_t2,'y':valor_y2})[m
 	valor_y2=valor_y2+valor_h2*Fn2[m
 	[m
 	return valor_y2[m
 [m
[31m-def euler_inverso(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_inverso,lista_t_inverso):[m
[32m+[m[32mdef euler_inverso(expressao,valor_h,valor_passos,lista_y_inverso,lista_t_inverso,inverso):[m
[32m+[m[41m	[m
[32m+[m	[32mvalor_y=lista_y_inverso[0][m
[32m+[m	[32mvalor_t=lista_t_inverso[0][m
[32m+[m	[32mif(inverso==1):print (valor_t,  valor_y)[m
 [m
[31m-	print ('Metodo de euler_inverso')[m
[31m-	print ('y(',valor_t,') =',valor_y)[m
[31m-	print ('h =',valor_h)[m
[31m-	lista_y_inverso.append(valor_y)[m
[31m-	lista_t_inverso.append(valor_t)[m
 	[m
[31m-	for next in range(valor_passos):[m
[32m+[m	[32mfor i in range(valor_passos):[m
 		[m
[31m-		valor_y_mais_1=euler_n_mais_1(valor_y,valor_t,valor_h) #Yn+1 para Fn+1[m
[32m+[m		[32mvalor_y_mais_1=euler_n_mais_1(expressao,valor_y,valor_t,valor_h) #Yn+1 para Fn+1[m
 		valor_t_mais_1=valor_t+valor_h #Tn+1[m
 [m
 		Fn=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1}) #Fn+1[m
 		valor_y=valor_y+valor_h*Fn[m
 		valor_t=valor_t+valor_h[m
[31m-		print ("%.1f  %.10f" %(valor_t , valor_y))[m
[32m+[m		[32mif(inverso==1):print ("%d  %.10f" %(i , valor_y))[m
[32m+[m[41m		[m
 		lista_y_inverso.append(valor_y)[m
 		lista_t_inverso.append(valor_t)[m
 	return [m
 [m
[31m-def euler_aprimorado(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_aprimorado,lista_t_aprimorado):[m
[32m+[m[32mdef euler_aprimorado(expressao,valor_h,valor_passos,lista_y_aprimorado,lista_t_aprimorado,aprimorado):[m
 [m
[31m-	print ('Metodo de euler_aprimorado')[m
[31m-	print ('y(',valor_t,') =',valor_y)[m
[31m-	print ('h =',valor_h)[m
[31m-	lista_y_aprimorado.append(valor_y)[m
[31m-	lista_t_aprimorado.append(valor_t)[m
[32m+[m	[32mvalor_y=lista_y_aprimorado[0][m
[32m+[m	[32mvalor_t=lista_t_aprimorado[0][m
[32m+[m	[32mif(aprimorado==1):print (valor_t,  valor_y)[m
 	[m
[31m-	for next in range(valor_passos):[m
[32m+[m	[32mfor i in range(valor_passos):[m
 [m
 		#Fn_mais_1[m
[31m-		valor_y_mais_1=euler_n_mais_1(valor_y,valor_t,valor_h)[m
[32m+[m		[32mvalor_y_mais_1=euler_n_mais_1(expressao,valor_y,valor_t,valor_h)[m
 		valor_t_mais_1=valor_t+valor_h[m
 		Fn_mais_1=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1})[m
 [m
 		#Fn[m
[31m-		Fn=S(expressao).subs({'t':valor_t,'y':valor_y})[m
[32m+[m		[32mFn=S(expressao).subs({'t':lista_t_aprimorado[i],'y':lista_y_aprimorado[i]})[m
 		Fn_total=Fn+Fn_mais_1[m
 [m
 		valor_y=valor_y+(valor_h/2)*Fn_total[m
 		valor_t=valor_t+valor_h[m
 [m
[31m-		print ("%.1f  %f" %(valor_t , valor_y))[m
[32m+[m		[32mif (aprimorado==1): print ("%d  %f" %(i, valor_y))[m
 		lista_y_aprimorado.append(valor_y)[m
 		lista_t_aprimorado.append(valor_t)[m
 [m
 	return[m
 [m
[31m-def rugge_kutta(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_kutta,lista_t_kutta):[m
[32m+[m[32mdef runge_kutta(expressao,valor_h,valor_passos,lista_y_kutta,lista_t_kutta,kutta):[m
 [m
[31m-	print ('Metodo de rugge_kutta')[m
[31m-	print ('y(',valor_t,') =',valor_y)[m
[31m-	print ('h =',valor_h)[m
[31m-	lista_y_kutta.append(valor_y)[m
[31m-	lista_t_kutta.append(valor_t)[m
[31m-	[m
[31m-	for next in range(valor_passos):[m
[32m+[m
[32m+[m	[32mvalor_y=lista_y_kutta[0][m
[32m+[m	[32mvalor_t=lista_t_kutta[0][m
[32m+[m	[32mif(kutta==1): print (valor_t,  valor_y)[m
[32m+[m
[32m+[m	[32mfor i in range(valor_passos):[m
 [m
 		K_1=S(expressao).subs({'t':valor_t,'y':valor_y})[m
 		K_2=S(expressao).subs({'t': valor_t+(0.5)*valor_h ,'y':valor_y+(0.5*valor_h*K_1)})[m
[36m@@ -102,13 +93,13 @@[m [mdef rugge_kutta(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_kutta,lis[m
 		valor_y=valor_y+(valor_h/6)*Fn[m
 		valor_t=valor_t+valor_h[m
 [m
[31m-		print ("%.1f  %f" %(valor_t , valor_y))[m
[32m+[m		[32mif(kutta==1): print ("%d  %f" %(i, valor_y))[m
 		lista_y_kutta.append(valor_y)[m
 		lista_t_kutta.append(valor_t)[m
 [m
 	return [m
 [m
[31m-def rugge_kutta5(expressao,valor_y,valor_t,valor_h,valor_passos,valor_y_kutta5,valor_t_kutta5):[m
[32m+[m[32mdef rumge_kutta5(expressao,valor_y,valor_t,valor_h,valor_passos,valor_y_kutta5,valor_t_kutta5):[m
 	[m
 	print ('Metodo de rugge_kutta 5 Ordem')[m
 	print ('y(',valor_t,') =',valor_y)[m
[36m@@ -150,37 +141,244 @@[m [mdef rugge_kutta5(expressao,valor_y,valor_t,valor_h,valor_passos,valor_y_kutta5,v[m
 		lista_t_kutta.append(valor_t)[m
 	return [m
 [m
[31m-def adam_bashforth(expressao,leitura,lista_y_adam,lista_t_adam):[m
[31m-	ordem='2'[m
[31m-	if(ordem=='2'):[m
[31m-		valor_h=float(leitura[4])[m
[31m-		valor_passos=int(leitura[5])[m
[31m-		valor_t_inicial=lista_t_adam[0][m
[31m-		valor_y=lista_y_adam[1][m
[31m-		valor_y_menos_1=lista_y_adam[0][m
[31m-		valor_t=2*valor_h[m
 [m
[31m-		print (valor_t_inicial,valor_y_menos_1)[m
[31m-		print (valor_t,valor_y)[m
 [m
[31m-		for next in range(valor_passos):	[m
[31m-			Fn_menos_1=S(expressao).subs({'t':valor_t_inicial,'y':valor_y_menos_1})[m
[31m-			Fn=S(expressao).subs({'t':valor_t,'y':valor_y})[m
[31m-			valor_y=valor_y+((3/2)*valor_h*Fn)-((0.5)*valor_h*Fn_menos_1)[m
[31m-			[m
[31m-			valor_t_inicial=valor_t_inicial+valor_h[m
[31m-			valor_t=valor_t+valor_h[m
 [m
[31m-			print ("%.1f %f" %(valor_t , valor_y))[m
[32m+[m[32m#BASHFORTH 2,3,4,5.....[m
[32m+[m[32mdef adam_bashforth2(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam):[m
[32m+[m	[32mFn=[][m
[32m+[m	[32mfor j in range(ordem+1):[m
[32m+[m		[32mFn.append(S(expressao).subs({'t':lista_t_adam[n],'y':lista_y_adam[n]}))[m
[32m+[m		[32mn=n+1[m
[32m+[m	[32mFn_0=(3*Fn[1])[m
[32m+[m	[32mFn_1=(1*Fn[0])[m
[32m+[m	[32mFn_total=((valor_h/2)*(Fn_0-Fn_1))[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_bashforth3(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam):[m
[32m+[m	[32mFn=[][m
[32m+[m	[32mfor j in range(ordem+1):[m
[32m+[m		[32mFn.append(S(expressao).subs({'t':lista_t_adam[n],'y':lista_y_adam[n]}))[m
[32m+[m		[32mn=n+1[m
[32m+[m[41m	[m
[32m+[m	[32mFn_0=((23)*Fn[2])[m
[32m+[m	[32mFn_1=((16)*Fn[1])[m
[32m+[m	[32mFn_2=((5)*Fn[0])[m
[32m+[m
[32m+[m	[32mFn_total=((valor_h/12)*(Fn_0-Fn_1+Fn_2))[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_bashforth4(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam):[m
[32m+[m	[32mFn=[][m
[32m+[m	[32mfor j in range(ordem+1):[m
[32m+[m		[32mFn.append(S(expressao).subs({'t':lista_t_adam[n],'y':lista_y_adam[n]}))[m
[32m+[m		[32mn=n+1[m
[32m+[m[41m	[m
[32m+[m	[32mFn_0=((55)*Fn[3])[m
[32m+[m	[32mFn_1=((59)*Fn[2])[m
[32m+[m	[32mFn_2=((37)*Fn[1])[m
[32m+[m	[32mFn_3=((9)*Fn[0])[m
[32m+[m	[32mFn_total=((valor_h/24)*(Fn_0-Fn_1+Fn_2-Fn_3))[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_bashforth5(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam):[m
[32m+[m	[32mFn=[][m
[32m+[m	[32mfor j in range(ordem+1):[m
[32m+[m		[32mFn.append(S(expressao).subs({'t':lista_t_adam[n],'y':lista_y_adam[n]}))[m
[32m+[m		[32mn=n+1[m
[32m+[m[41m	[m
[32m+[m	[32mFn_0=((1901)*Fn[4])[m
[32m+[m	[32mFn_1=((2774)*Fn[3])[m
[32m+[m	[32mFn_2=((2616)*Fn[2])[m
[32m+[m	[32mFn_3=((1274)*Fn[1])[m
[32m+[m	[32mFn_4=((251)*Fn[0])[m
[32m+[m	[32mFn_total=((valor_h/720)*(Fn_0-Fn_1+Fn_2-Fn_3+Fn_4))[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_bashforth(expressao,leitura,valor_h,valor_passos,lista_y_adam,lista_t_adam):[m
[32m+[m	[32mn=0[m
[32m+[m	[32mordem=leitura-1[m
[32m+[m	[32mvalor_y=lista_y_adam[ordem][m
[32m+[m	[32mvalor_t=lista_t_adam[ordem][m
[32m+[m
[32m+[m	[32mfor i in range(ordem):[m
[32m+[m		[32mprint (i , 	 lista_y_adam[i])[m
[32m+[m
[32m+[m	[32mfor i in range(ordem,valor_passos+1):[m
[32m+[m		[32mif ((ordem+1) == 2):[m
[32m+[m			[32mFn=adam_bashforth2(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam)[m
[32m+[m		[32mif ((ordem+1) == 3):[m
[32m+[m			[32mFn=adam_bashforth3(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam)[m
[32m+[m		[32mif ((ordem+1) == 4):[m
[32m+[m			[32mFn=adam_bashforth4(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam)[m
[32m+[m		[32mif ((ordem+1) == 5):[m
[32m+[m			[32mFn=adam_bashforth5(expressao,ordem,n,valor_h,lista_y_adam,lista_t_adam)[m
[32m+[m
[32m+[m		[32mn=n+1[m
[32m+[m		[32mvalor_y=valor_y + Fn[m
[32m+[m		[32mvalor_t=valor_t + valor_h[m
[32m+[m		[32mprint (i ,   valor_y)[m
[32m+[m		[32mlista_y_adam.append(valor_y)[m
[32m+[m		[32mlista_t_adam.append(valor_t)[m
[32m+[m	[32mreturn[m
[32m+[m
[32m+[m
[32m+[m[32m#MOULTON 2,3,4.....[m
[32m+[m[32mdef adam_moulton2(expressao,ordem,n,valor_h,lista_y_moulton,lista_t_moulton):[m
[32m+[m[41m		[m
[32m+[m	[32m#Calcula o Y+1 por euler[m[41m	[m
[32m+[m	[32mvalor_y_mais_1=euler_n_mais_1(expressao,lista_y_moulton[ordem],lista_t_moulton[ordem],valor_h)[m[41m	[m
[32m+[m	[32mvalor_t_mais_1=lista_t_moulton[ordem]+valor_h[m
[32m+[m[41m	[m
[32m+[m[41m    [m
[32m+[m	[32mFn_mais_1=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1})[m
[32m+[m	[32mFn=S(expressao).subs({'t':lista_t_moulton[ordem],'y':lista_y_moulton[ordem]})[m
[32m+[m
[32m+[m	[32mFn_total = ((valor_h/2)*(Fn+Fn_mais_1))[m
[32m+[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_moulton3(expressao,ordem,n,valor_h,lista_y_moulton,lista_t_moulton):[m
[32m+[m	[32mFn=[][m
[32m+[m	[32m#Calcula o Y+1 por euler[m[41m	[m
[32m+[m	[32mvalor_y_mais_1=euler_n_mais_1(expressao,lista_y_moulton[ordem],lista_t_moulton[ordem],valor_h)[m[41m	[m
[32m+[m	[32mvalor_t_mais_1=lista_t_moulton[ordem]+valor_h[m
[32m+[m[41m	[m
[32m+[m	[32mFn_mais_1=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1})[m
[32m+[m
[32m+[m	[32mfor i in range(ordem+1):[m
[32m+[m		[32mFn.append(S(expressao).subs({'t':lista_t_moulton[n],'y':lista_y_moulton[n]}))[m
[32m+[m		[32mn=n+1[m
[32m+[m
[32m+[m	[32mFn_mais_1=(5*Fn_mais_1)[m
[32m+[m	[32mFn_0=8*Fn[1][m
[32m+[m	[32mFn_1=Fn[0][m
[32m+[m
[32m+[m	[32mFn_total = ((valor_h/12)*(Fn_mais_1+Fn_0-Fn_1))[m
[32m+[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_moulton4(expressao,ordem,n,valor_h,lista_y_moulton,lista_t_moulton):[m
[32m+[m	[32mFn=[][m[41m	[m
[32m+[m
[32m+[m	[32m#Calcula o Y+1 por euler[m[41m	[m
[32m+[m	[32mvalor_y_mais_1=euler_n_mais_1(expressao,lista_y_moulton[ordem],lista_t_moulton[ordem],valor_h)[m[41m	[m
[32m+[m	[32mvalor_t_mais_1=lista_t_moulton[ordem]+valor_h[m
[32m+[m	[32mFn_mais_1=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1})[m
[32m+[m
[32m+[m
[32m+[m	[32mfor i in range(ordem+1):[m
[32m+[m		[32mFn.append(S(expressao).subs({'t':lista_t_moulton[n],'y':lista_y_moulton[n]}))[m
[32m+[m		[32mn=n+1[m
[32m+[m
[32m+[m	[32mFn_mais_1=Fn_mais_1*9[m
[32m+[m	[32mFn_0=((19)*Fn[2])[m
[32m+[m	[32mFn_1=((5)*Fn[1])[m
[32m+[m	[32mFn_2=Fn[0][m
[32m+[m
[32m+[m	[32mFn_total =((valor_h/24)*(Fn_mais_1+Fn_0-Fn_1+Fn_2))[m
[32m+[m	[32mreturn Fn_total[m
[32m+[m
[32m+[m[32mdef adam_moulton(expressao,ordem,valor_h,valor_passos,lista_y_moulton,lista_t_moulton):[m
[32m+[m	[32mn=0[m
[32m+[m	[32mordem=ordem-1[m
[32m+[m
[32m+[m	[32mfor k in range(ordem):[m
[32m+[m		[32mprint (k , 	 lista_y_moulton[k])[m
[32m+[m
[32m+[m	[32mfor i in range(ordem,valor_passos+1):[m
[32m+[m		[32mvalor_y=lista_y_moulton[i][m
[32m+[m		[32mvalor_t=lista_t_moulton[i][m
[32m+[m
[32m+[m		[32mif ((ordem+1) == 2):[m
[32m+[m			[32mFn=adam_moulton2(expressao,ordem,n,valor_h,lista_y_moulton,lista_t_moulton)[m
[32m+[m
[32m+[m		[32mif ((ordem+1) == 3):[m
[32m+[m			[32mFn=adam_moulton3(expressao,ordem,n,valor_h,lista_y_moulton,lista_t_moulton)[m
[32m+[m[41m		[m
[32m+[m		[32mif ((ordem+1) == 4):[m
[32m+[m			[32mFn=adam_moulton4(expressao,ordem,n,valor_h,lista_y_moulton,lista_t_moulton)[m
[32m+[m[41m		[m
[32m+[m		[32mn=n+1[m
[32m+[m		[32mvalor_y=valor_y + Fn[m
[32m+[m		[32mvalor_t=valor_t + valor_h[m
[32m+[m		[32mprint (i ,   valor_y)[m
[32m+[m		[32mlista_y_moulton.append(valor_y)[m
[32m+[m		[32mlista_t_moulton.append(valor_t)[m
[32m+[m
[32m+[m	[32mreturn[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m#FORMULA_INVERSA DE 2,3,4[m
[32m+[m[32mdef formula_inversa2(expressao,ordem,n,valor_h,lista_y_inversa,lista_t_inversa):[m
[32m+[m
[32m+[m	[32mvalor_y_mais_1=euler_n_mais_1(expressao,lista_y_inversa[ordem],lista_t_inversa[ordem],valor_h)[m[41m	[m
[32m+[m	[32mvalor_t_mais_1=lista_t_inversa[ordem]+valor_h[m
[32m+[m	[32mFn_mais_1=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1})[m
[32m+[m
[32m+[m	[32mFn_mais_1=((2*valor_h)*Fn_mais_1)[m
[32m+[m	[32my_0=(4*(lista_y_inversa[ordem]))[m
[32m+[m	[32my_1=lista_y_inversa[ordem-1][m
[32m+[m
[32m+[m	[32mYn_total=((1/3)*(y_0-y_1+Fn_mais_1))[m
[32m+[m
[32m+[m	[32mreturn	Yn_total[m
[32m+[m
[32m+[m[32mdef formula_inversa4(expressao,ordem,n,valor_h,lista_y_inversa,lista_t_inversa):[m
[32m+[m
[32m+[m	[32mvalor_y_mais_1=euler_n_mais_1(expressao,lista_y_inversa[ordem],lista_t_inversa[ordem],valor_h)[m[41m	[m
[32m+[m	[32mvalor_t_mais_1=lista_t_inversa[ordem]+valor_h[m
[32m+[m	[32mFn_mais_1=S(expressao).subs({'t':valor_t_mais_1,'y':valor_y_mais_1})[m
[32m+[m
[32m+[m	[32mFn_mais_1=((12*valor_h)*Fn_mais_1)[m
[32m+[m	[32my_0=(48*lista_y_inversa[ordem])[m
[32m+[m	[32my_1=(36*lista_y_inversa[ordem-1])[m
[32m+[m	[32my_2=(16*lista_y_inversa[ordem-2])[m
[32m+[m	[32my_3=(3*lista_y_inversa[ordem-3])[m
[32m+[m
[32m+[m	[32mYn_total=((1/25)*(y_0-y_1+y_2-y_3+Fn_mais_1))[m
 [m
[31m-			lista_t_adam.append(valor_t)[m
[31m-			lista_y_adam.append(valor_y)[m
[32m+[m	[32mreturn	Yn_total[m
 [m
[31m-		print ('Terminado')[m
[32m+[m[32mdef formula_inversa(expressao,ordem,valor_h,valor_passos,lista_y_inversa,lista_t_inversa):[m
[32m+[m	[32mn=0[m
[32m+[m	[32mordem=ordem-1[m
[32m+[m	[32mvalor_y=lista_y_inversa[ordem][m
[32m+[m	[32mvalor_t=lista_t_inversa[ordem][m
[32m+[m
[32m+[m
[32m+[m	[32mfor k in range(ordem):[m
[32m+[m		[32mprint (k , 	 lista_y_inversa[k])[m
[32m+[m
[32m+[m
[32m+[m	[32mfor i in range(ordem,valor_passos+1):[m
[32m+[m
[32m+[m		[32mif ((ordem+1) == 2):[m
[32m+[m			[32mFn=formula_inversa2(expressao,ordem,n,valor_h,lista_y_inversa,lista_t_inversa)[m
[32m+[m
[32m+[m		[32mif ((ordem+1) == 4):[m
[32m+[m			[32mFn=formula_inversa2(expressao,ordem,n,valor_h,lista_y_inversa,lista_t_inversa)[m
[32m+[m[41m	[m
[32m+[m		[32mn=n+1[m
[32m+[m		[32mvalor_y=valor_y + Fn[m
[32m+[m		[32mvalor_t=valor_t + valor_h[m
[32m+[m		[32mprint (i ,   valor_y)[m
[32m+[m		[32mlista_y_inversa.append(valor_y)[m
[32m+[m		[32mlista_t_inversa.append(valor_t)[m
 [m
 	return [m
 [m
 [m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m
[32m+[m[32m#INICIO DA ''MAIN''[m
 #Lendo o arquivo[m
 arquivo=open('arquivo.txt','r')[m
 leitura=arquivo.read().split()[m
[36m@@ -193,18 +391,9 @@[m [mvalor_h=0[m
 valor_passos=0[m
 [m
 [m
[31m-[m
[31m-#Guardando os valores[m
[31m-#valor_t=float(leitura[1])[m
[31m-#valor_y=float(leitura[2])[m
[31m-#valor_h=float(leitura[3])[m
[31m-#valor_passos=int(leitura[4])[m
[31m-#expressao=leitura[5][m
[31m-[m
[31m-[m
 #Listas Usadas[m
[31m-lista_y=[][m
[31m-lista_t=[][m
[32m+[m[32mlista_y_euler=[][m
[32m+[m[32mlista_t_euler=[][m
 [m
 lista_y_inverso=[][m
 lista_t_inverso=[][m
[36m@@ -221,37 +410,280 @@[m [mlista_t_kutta5=[][m
 lista_y_adam=[][m
 lista_t_adam=[][m
 [m
[31m-#euler(valor_y,valor_t,valor_h,valor_passos,lista_y,lista_t)[m
[31m-#euler_inverso(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_inverso,lista_t_inverso)[m
[31m-#euler_aprimorado(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_aprimorado,lista_t_aprimorado)[m
[31m-#rugge_kutta(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_kutta,lista_t_kutta)[m
[31m-#rugge_kutta5(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_kutta5,lista_t_kutta5)[m
[31m-#plt.plot(lista_t_kutta, lista_y_kutta)[m
[31m-#plt.show()[m
[32m+[m[32mlista_y_moulton=[][m
[32m+[m[32mlista_t_moulton=[][m
[32m+[m
[32m+[m[32mlista_y_inversa=[][m
[32m+[m[32mlista_t_inversa=[][m
[32m+[m
[32m+[m[32m#-------------------------------PASSOS SIMPLES---------------------------------#[m
[32m+[m[32mif(leitura[0]=='euler'):[m
[32m+[m	[32mprint ('Metodo de euler')[m
[32m+[m	[32mprint ('y(',leitura[2],') =',leitura[1])[m
[32m+[m	[32mprint ('h =',leitura[3])[m
[32m+[m
[32m+[m	[32mlista_y_euler.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_euler.append(int(leitura[2]))[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mvalor_passos=int(leitura[4])[m
[32m+[m
[32m+[m
[32m+[m	[32meuler(leitura[5],valor_h,valor_passos,lista_y_euler,lista_t_euler,1)[m
[32m+[m	[32mplt.plot(lista_t_euler, lista_y_euler)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='euler_inverso'):[m
[32m+[m	[32mprint ('Metodo de euler_inverso')[m
[32m+[m	[32mprint ('y(',leitura[2],') =',leitura[1])[m
[32m+[m	[32mprint ('h =',leitura[3])[m
[32m+[m
[32m+[m	[32mlista_y_inverso.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_inverso.append(int(leitura[2]))[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mvalor_passos=int(leitura[4])[m
 [m
[32m+[m	[32meuler_inverso(leitura[5],valor_h,valor_passos,lista_y_inverso,lista_t_inverso,1)[m
[32m+[m	[32mplt.plot(lista_t_inverso, lista_y_inverso)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='euler_aprimorado'):[m
[32m+[m[41m	[m
[32m+[m	[32mprint ('Metodo de euler_aprimorado')[m
[32m+[m	[32mprint ('y(',leitura[2],') =',leitura[1])[m
[32m+[m	[32mprint ('h =',leitura[3])[m
[32m+[m
[32m+[m	[32mvalor_passos=int(leitura[4])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_aprimorado.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_aprimorado.append(int(leitura[2]))[m
 [m
[31m-if(leitura[0]=='adam_bashforth'):[m
[31m-	if  (leitura[len(leitura)-1]=='2'):[m
[31m-		y1=float(leitura[1])[m
[31m-		lista_y_adam.append(y1)[m
[31m-		y1=float(leitura[2])[m
[31m-		lista_y_adam.append(y1)[m
[31m-		y1=float(leitura[3])[m
[31m-		lista_t_adam.append(y1)[m
[31m-		adam_bashforth(leitura[6],leitura,lista_y_adam,lista_t_adam)[m
[31m-	elif(leitura[len(leitura)-1]=='3'):[m
[31m-	elif(leitura[len(leitura)-1]=='4'):[m
[31m-	elif(leitura[len(leitura)-1]=='5'):[m
[31m-	elif(leitura[len(leitura)-1]=='6'):[m
[31m-	elif(leitura[len(leitura)-1]=='7'):[m
[31m-	elif(leitura[len(leitura)-1]=='8'):[m
[32m+[m	[32meuler_aprimorado(leitura[5],valor_h,valor_passos,lista_y_aprimorado,lista_t_aprimorado,1)[m
[32m+[m	[32mplt.plot(lista_t_aprimorado, lista_y_aprimorado)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='runge_kutta'):[m
[32m+[m	[32mprint ('Metodo de runge_kutta')[m
[32m+[m	[32mprint ('y(',leitura[2],') =',leitura[1])[m
[32m+[m	[32mprint ('h =',leitura[3])[m
 [m
[32m+[m	[32mvalor_passos=int(leitura[4])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_kutta.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_kutta.append(int(leitura[2]))[m
 [m
[32m+[m	[32mrunge_kutta(leitura[5],valor_h,valor_passos,lista_y_kutta,lista_t_kutta,1)[m
[32m+[m	[32m#runge_kutta5(expressao,valor_y,valor_t,valor_h,valor_passos,lista_y_kutta5,lista_t_kutta5)[m
[32m+[m	[32mplt.plot(lista_t_kutta, lista_y_kutta)[m
[32m+[m	[32mplt.show()[m
 [m
 [m
[31m-#plt.plot(lista_t_adam, lista_y_adam)[m
[31m-#plt.show()[m
[32m+[m[32m#-------------------------------ADAM_BASHFORTH-----------------------------#[m
[32m+[m[32mif(leitura[0]=='adam_bashforth'):[m[41m	[m
[32m+[m		[32mt3=float(leitura[len(leitura)-5])[m
[32m+[m		[32mvalor_h=float(leitura[len(leitura)-4])[m
[32m+[m[41m		[m
[32m+[m		[32mfor i in range(1,len(leitura)-5):[m
[32m+[m			[32my3=float(leitura[i])[m
[32m+[m			[32mlista_y_adam.append(y3)[m
[32m+[m			[32mlista_t_adam.append(t3)[m
[32m+[m			[32mt3=t3+valor_h[m
[32m+[m
[32m+[m		[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m		[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m		[32madam_bashforth(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_adam,lista_t_adam)[m
[32m+[m		[32mplt.plot(lista_t_adam, lista_y_adam)[m
[32m+[m		[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_bashforth_by_euler'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_adam.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_adam.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler(leitura[len(leitura)-2],valor_h,ordem,lista_y_adam,lista_t_adam,0)[m
[32m+[m	[32madam_bashforth(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_adam,lista_t_adam)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_adam, lista_y_adam)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_bashforth_by_euler_inverso'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_adam.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_adam.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler_inverso(leitura[len(leitura)-2],valor_h,ordem,lista_y_adam,lista_t_adam,0)[m
[32m+[m	[32madam_bashforth(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_adam,lista_t_adam)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_adam, lista_y_adam)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_bashforth_by_euler_aprimorado'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_adam.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_adam.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler_aprimorado(leitura[len(leitura)-2],valor_h,ordem,lista_y_adam,lista_t_adam,0)[m
[32m+[m	[32madam_bashforth(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_adam,lista_t_adam)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_adam, lista_y_adam)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_bashforth_by_runge_kutta'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_adam.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_adam.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32mrunge_kutta(leitura[len(leitura)-2],valor_h,ordem,lista_y_adam,lista_t_adam,0)[m
[32m+[m	[32madam_bashforth(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_adam,lista_t_adam)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_adam, lista_y_adam)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32m#------------------------------ADAM MOULTON---------------------------------#[m
[32m+[m[32mif(leitura[0]=='adam_multon'):[m[41m	[m
[32m+[m	[32mt3=float(leitura[len(leitura)-5])[m
[32m+[m	[32mvalor_h=float(leitura[len(leitura)-4])[m
[32m+[m[41m		[m
[32m+[m	[32mfor i in range(1,len(leitura)-5):[m
[32m+[m		[32my3=float(leitura[i])[m
[32m+[m		[32mlista_y_moulton.append(y3)[m
[32m+[m		[32mlista_t_moulton.append(t3)[m
[32m+[m		[32mt3=t3+valor_h[m
[32m+[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_moulton,lista_t_moulton)[m
[32m+[m	[32mplt.plot(lista_t_moulton, lista_y_moulton)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_multon_by_euler'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_moulton.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_moulton.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler(leitura[len(leitura)-2],valor_h,ordem,lista_y_moulton,lista_t_moulton,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_moulton,lista_t_moulton)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_moulton, lista_y_moulton)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_multon_by_euler_inverso'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_moulton.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_moulton.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler_inverso(leitura[len(leitura)-2],valor_h,ordem,lista_y_moulton,lista_t_moulton,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_moulton,lista_t_moulton)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_moulton, lista_y_moulton)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_multon_by_euler_aprimorado'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_moulton.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_moulton.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler_aprimorado(leitura[len(leitura)-2],valor_h,ordem,lista_y_moulton,lista_t_moulton,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_moulton,lista_t_moulton)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_moulton, lista_y_moulton)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='adam_multon_by_runge_kutta'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_moulton.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_moulton.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32mrunge_kutta(leitura[len(leitura)-2],valor_h,ordem,lista_y_moulton,lista_t_moulton,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_moulton,lista_t_moulton)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_moulton, lista_y_moulton)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32m#----------------------------FORMULA INVERSA----------------------------------#[m
[32m+[m[32mif(leitura[0]=='formula_inversa'):[m
[32m+[m		[32mt3=float(leitura[len(leitura)-5])[m
[32m+[m		[32mvalor_h=float(leitura[len(leitura)-4])[m
[32m+[m[41m		[m
[32m+[m		[32mfor i in range(1,len(leitura)-5):[m
[32m+[m			[32my3=float(leitura[i])[m
[32m+[m			[32mlista_y_inversa.append(y3)[m
[32m+[m			[32mlista_t_inversa.append(t3)[m
[32m+[m			[32mt3=t3+valor_h[m
[32m+[m
[32m+[m		[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m		[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m		[32mformula_inversa(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_inversa,lista_t_inversa)[m
[32m+[m		[32mplt.plot(lista_t_inversa, lista_y_inversa)[m
[32m+[m		[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='formula_inversa_by_euler'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_inversa.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_inversa.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler(leitura[len(leitura)-2],valor_h,ordem,lista_y_inversa,lista_t_inversa,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_inversa,lista_t_inversa)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_inversa, lista_y_inversa)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='formula_inversa_by_euler_inverso'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_inversa.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_inversa.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler_inverso(leitura[len(leitura)-2],valor_h,ordem,lista_y_inversa,lista_t_inversa,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_inversa,lista_t_inversa)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_inversa, lista_y_inversa)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='formula_inversa_by_euler_aprimorado'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_inversa.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_inversa.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32meuler_aprimorado(leitura[len(leitura)-2],valor_h,ordem,lista_y_inversa,lista_t_inversa,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_inversa,lista_t_inversa)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_inversa, lista_y_inversa)[m
[32m+[m	[32mplt.show()[m
[32m+[m
[32m+[m[32mif(leitura[0]=='formula_inversa_by_runge_kutta'):[m[41m	[m
[32m+[m	[32mordem=int(leitura[len(leitura)-1])[m
[32m+[m	[32mvalor_passos=int(leitura[len(leitura)-3])[m
[32m+[m	[32mvalor_h=float(leitura[3])[m
[32m+[m	[32mlista_y_inversa.append(int(leitura[1]))[m
[32m+[m	[32mlista_t_inversa.append(int(leitura[2]))[m
[32m+[m
[32m+[m	[32mrunge_kutta(leitura[len(leitura)-2],valor_h,ordem,lista_y_inversa,lista_t_inversa,0)[m
[32m+[m	[32madam_moulton(leitura[len(leitura)-2],ordem,valor_h,valor_passos,lista_y_inversa,lista_t_inversa)[m
[32m+[m
[32m+[m	[32mplt.plot(lista_t_inversa, lista_y_inversa)[m
[32m+[m	[32mplt.show()[m
 [m
 [m
[31m-arquivo.close()[m
 [m
[32m+[m[32marquivo.close()[m
\ No newline at end of file[m
